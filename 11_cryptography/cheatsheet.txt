Last Modified: March 7, 2025

1 byte = 8 bits
1 Hex character = 4 bits
1 UTF-8 ASCII character = 8 bits

-----------

Convert UTF-8 characters to binary:
Buffer.from("some text", "utf-8");

Convert HEX characters to binary:
Buffer.from("2347babab", "hex");

Convert binary to HEX characters:
yourBuffer.toString("hex");

Convert binary to UTF-8 characters:
yourBuffer.toString("utf-8");

-----------

HEX   ----   Binary
0     ----   0000
1     ----   0001
2     ----   0010
3     ----   0011
4     ----   0100
5     ----   0101
6     ----   0110
7     ----   0111
8     ----   1000
9     ----   1001
a     ----   1010
b     ----   1011
c     ----   1100
d     ----   1101
e     ----   1110
f     ----   1111

For example, using the table above, we can easily convert 4D 4B 6A to binary, which is 0100 1101 0100 1011 0110 1010.

-----------

======================================
============== GENERAL ===============
======================================

Random: When I use this term in the section, I mean things that appear random to us humans, like the result of a hash function (e.g., SHA-256) or Math.random(). But, they are deterministic and predictable, which means that they are unsuitable for cryptographic security.

Cryptographically Secure Random: This is unpredictable for attackers and is generated by OS-based secure random number generators (CSPRNGs). The result of crypto.randomBytes() and crypto.randomFill() falls into this category. IVs and keys in AES, and salts for KDFs should be cryptographically secure random. When I use the term truly random in this section, I am referring to this and not true randomness based on physical entropy sources like radioactive decay, thermal noise, quantum phenomena in general, and mouse movements.

Integrity: Verifying that the data was not modified in transmission either by accident or intentionally by an attacker.

Authentication: Verifying that the entity we are communicating with is exactly who they say they are and not someone else impersonating them.

Confidentiality: Making sure that only authorized parties can read the data. Achieved with encryption.

Cleartext: Simply any data (including ciphertext) not further protected when transmitted or stored. For example, sending ciphertext over HTTP means the ciphertext itself is transmitted as cleartext.

Plaintext: Original unencrypted data.

Ciphertext: Encrypted data.

Encryption: Converting from plaintext to ciphertext.

Decryption: Converting from ciphertext to plaintext.

Cipher: A cryptographic algorithm used for encryption and decryption.

Cryptanalyst: An expert who analyzes cryptographic security and tries to break encryption methods.

XOR (Exclusive OR): A bitwise operation used in many cryptographic algorithms. If both bits are equal, it will output 0; otherwise, 1.

Entropy: Used as a measure of randomness in a cryptographic system, higher entropy means stronger security. Low entropy example: "2345", high entropy example: "3)Fs". The highest entropy can be achieved using crypto.randomBytes() in Node.js. The formula to calculate entropy is: H(X) = -∑ p(x_i) * log_2(p(x_i)) where p(x_i) is the probability of x_i that is part of X happening. Entropy is a fundamental concept in computer science, including areas like data science, machine learning, and data compression, and it is not just used in cryptography.

Padding: Extra data that gets added to make sure our data is divisible by our block size (used in AES, SHA, etc.)

NIST (National Institute of Standards and Technology): Government agency that sets cryptographic standards (e.g., AES, SHA). Part of the U.S. department of commerce.

FIPS (Federal Information Processing Standards): These are U.S. government security standards established by NIST for cryptographic modules. Enabling FIPS mode (crypto.setFips(1), your OpenSSL build should also be correct) means restricting use to only the cryptographic algorithms and code paths that were officially tested and approved under the FIPS standard, and disallowing everything else. So when you enable this, you won't be able to use broken algorithms like SHA1 and MD5.

NSA (National Security Agency):	Government agency responsible for cryptographic research and national security. Developed SHA. Part of the U.S. department of defense.

Quantum Computing: A type of computing that uses quantum bits (qubits) instead of classical bits. Unlike classical bits, which are strictly 0 or 1, qubits can be 0, 1, or both at the same time. We can achieve exponentially faster computations for certain algorithms, such as Shor's (for factoring large numbers) and Grover's (for speeding up searches).

Brute-Force Attack: Trying all possible combinations until the correct one is found. It is the worst-case scenario for an attacker when no mathematical vulnerability exists in the system.

Kerckhoffs's Principle: States that the security of a cryptographic system should ONLY rely on the secrecy of the key and not that of the algorithm.

NONCE (number used once): A unique value used once. The first part of the IV in AES-GCM is called this.

======================================
======= Symmetric Encryption =========
======================================
The Caesar Cipher: A simple substitution cipher that has been around for thousands of years that shifts each letter in the plaintext by a fixed number of places in the alphabet. For example, with a shift of 3, "HELLO" becomes "KHOOR".

OTP (One-time Pad Encryption): Described as the perfect encryption. Claude Shannon, father of modern cryptography, proved in 1949 that breaking OTP is mathematically impossible.

AES (Advanced Encryption Standard): One of the most common symmetric encryption algorithms. Always works with 128-bit blocks. Key sizes could be 128, 192 or 256 bits.

Common Modes of AES:
ECB (Electronic Codebook): Simplest mode in AES, considered insecure.
CBC (Cipher Block Chaining): IV size should be exactly 16 bytes.
CTR (Counter Mode): IV size should be exactly 16 bytes.
GCM (Galois/Counter Mode): IV size is recommended to be 12 bytes for best performance. Uses GHASH to compute a MAC.
XTS: A mode of AES used for disk encryption.

IV (Initialization Vector): Some random data used to add randomness to encryptions. Must be cryptographically secure random.

MAC (Message Authentication Code): A piece of data calculated with a secret used to ensure integrity and do authentication. See the MAC section below for terms related to this.

ChaCha20: Another algorithm to fall back on in case a mathematical vulnerability is discovered in AES. Also, it’s often faster on software-only implementations.

======================================
============== Hashing ===============
======================================
Message: The input of a hash function.

Digest: Final output of a hash function, also referred to as hash. It could also refer to a hashing algorithm.

MD5 (Message-Digest Algorithm 5): A broken hashing algorithm that you should avoid for cryptographic purposes.

SHA (Secure Hash Algorithm) family: Has 3 families, family 1 (SHA1), family 2 (SHA224, SHA256, SHA384, SHA512), and family 3 (SHA3-224, SHA3-256, SHA3-384, SHA3-512).

SHA256: The most used hashing algorithm. Uses 512-bit blocks.

Blake2b: A hash function faster than SHA-2 and is considered a strong alternative for hashing. Used in Argon2.

Preimage Resistance: Given a hash H(x), it should be infeasible to find the original input x.

Second Preimage Resistance: Given a message x, it should be infeasible to find a different message y such that H(x) = H(y).

Collision Resistance: It should be infeasible to find two distinct inputs, x and y, such that H(x) = H(y).

Avalanche Effect: A small change in input should result in a completely different hash output.

Rainbow Tables: Precomputed tables of hashes used to quickly reverse hashes into their original inputs, which makes unsalted password hashing vulnerable.

Pigeonhole Principle: If n items are placed into m containers and n > m, at least one container must hold more than one item. This is proof that we have infinite collisions in any hashing algorithm, even if none have been found in secure hash functions like SHA-256.

Birthday Paradox: In a group of just 23 people, there is more than a 50% probability that at least two of them share the same birthday. This principle is used in cryptographic attacks to find hash collisions more efficiently than brute force.

Length Extension Attack: If a hash function is vulnerable, an attacker can use H(m) to compute H(m || m') [this means data m' appended to the original message] without knowing the original m.

======================================
=============== MAC ==================
======================================
HMAC (Hash-Based Message Authentication Code): Uses a secret key with a hashing algorithm to compute a MAC.

GHASH (Galois Hash): A keyed hash function used in AES-GCM mode to compute a MAC based on the ciphertext, key and any additional data (AAD).

AAD (Additional Authenticated Data): Any data that you want to authenticate but do not want to encrypt. We can set this with cipher.setAAD() in supported modes.

Poly1305: An algorithm used alongside the ChaCha20 cipher to compute a MAC.

======================================
== Key Derivation Functions (KDFs) ===
======================================
Salt: Some random data added to the input of a hash algorithm to prevent pre-computed attacks like rainbow tables.

PBKDF2: A key-derivation function that uses HMAC with multiple iterations to slow down brute-forcing and produce keys of arbitrary length.

Scrypt: A memory-hard password-based key-derivation function, making large-scale cracking more difficult by requiring significant memory

HKDF (HMAC-Based Extract-and-Expand Key Derivation Function): A two-phase (extract and expand) KDF that uses HMAC internally, commonly used to securely derive multiple keys from a single shared secret.

Argon2: A modern, memory-hard key-derivation function (winner of the 2015 Password Hashing Competition), designed to resist GPU-based brute-force

======================================
======= Asymmetric Encryption ========
======================================
Will be added soon after the second part of the section is released.
